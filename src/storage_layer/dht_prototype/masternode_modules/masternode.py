from .helpers import hex_to_int, int_to_hex


class MasterNode:
    def __init__(self, nodeid, ip, port, pubkey):
        self.nodeid = nodeid
        self.ip = ip
        self.port = port
        self.pubkey = pubkey

        # TODO
        self.rpc = None
        self.reputation = None

    def __eq__(self, other):
        return self.__dict__ == other.__dict__


class MasterNodeManager:
    def __init__(self, masternode_list):
      self.__masternodes = {}

      for nodeid, ip, port, pubkey in masternode_list:
          nodeid = hex_to_int(nodeid)
          self.__masternodes[nodeid] = MasterNode(nodeid, ip, port, pubkey)

    def get(self, nodeid):
        return self.__masternodes[nodeid]

    def get_all(self):
        return list(self.__masternodes.values())

    def get_other_nodes(self, mynodeid):
        other_nodes = []
        for mn in self.__masternodes.values():
            if mn.nodeid != mynodeid:
                other_nodes.append(mn.nodeid)
        return other_nodes
