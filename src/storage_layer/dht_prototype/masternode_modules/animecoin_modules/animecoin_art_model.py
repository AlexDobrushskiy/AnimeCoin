class ArtTicket:
    def __init__(self):
        #### set by MN
        self.CREATION_DATE = None
        self.CURRENT_ANIMECOIN_BLOCK_NUMBER = None
        self.CURRENT_ANIMECOIN_BLOCK_HASH = None
        self.ARTIST_ANIMECOIN_ID_PUBLIC_KEY = None

        # artwork metadata
        self.ARTWORK_IMAGE_SIZE_IN_MB = None
        self.ARTWORK_IMAGE_HASH = None
        self.ARTWORK_METADATA_HASH = None
        self.ARTWORK_PREVIEW_HASH = None
        self.ARTWORK_METADATA_TICKET_ANIMECOIN_BLOCKCHAIN_STORAGE_TXID = None

        # fingerprints
        # TODO: MNs always sign with:
        #   o MN collateral address (RPC to DASH client)
        #   o animecoin ID (Ed521)

        self.NSFW_MODEL_FILE_HASH = None
        self.DUPE_FINGERPRINTING_MODEL_NAME_1_OF_5 = None
        self.DUPE_FINGERPRINTING_MODEL_NAME_2_OF_5 = None
        self.DUPE_FINGERPRINTING_MODEL_NAME_3_OF_5 = None
        self.DUPE_FINGERPRINTING_MODEL_NAME_4_OF_5 = None
        self.DUPE_FINGERPRINTING_MODEL_NAME_5_OF_5 = None

        # fees
        self.ANIMECOIN_MINING_DIFFICULTY_ADJUSTMENT_RATIO = None
        self.REQUIRED_REGISTRATION_FEE_IN_ANIMECOIN_TERMS_PRE_DIFFICULTY_ADJUSTMENT = None
        self.REQUIRED_REGISTRATION_FEE_IN_ANIMECOIN_TERMS_POST_DIFFICULTY_ADJUSTMENT = None
        self.ARTISTS_FORFEITABLE_DEPOSIT_IN_ANIMECOIN_TERMS_TO_INITIATE_REGISTRATION = None

        # signatures
        self.REGISTERING_MASTERNODE_ANIMECOIN_COLLATERAL_BLOCKCHAIN_ADDRESS = None
        self.REGISTERING_MASTERNODE_ANIMECOIN_ID_PUBLIC_KEY = None
        self.REGISTERING_MASTERNODE_IP_ADDRESS = None
        self.REGISTERING_MASTERNODE_COLLATERAL_SIGNATURE_ON_COMBINED_ARTWORK_IMAGE_AND_METADATA_STRING = None
        self.REGISTERING_MASTERNODE_ANIMECOIN_ID_SIGNATURE_ON_COMBINED_ARTWORK_IMAGE_AND_METADATA_STRING = None
        self.REGISTERING_MASTERNODE_PROCESSED_DATE_TIME = None

        self.CONFIRMING_MN_1_ANIMECOIN_COLLATERAL_BLOCKCHAIN_ADDRESS = None
        self.CONFIRMING_MN_1_ANIMECOIN_ID_PUBLIC_KEY = None
        self.CONFIRMING_MN_1_IP_ADDRESS = None
        self.CONFIRMING_MN_1_COLLATERAL_SIGNATURE_ON_COMBINED_IMAGE_AND_METADATA_STRING = None
        self.CONFIRMING_MN_1_ANIMECOIN_ID_SIGNATURE_ON_COMBINED_IMAGE_AND_METADATA_STRING = None
        self.CONFIRMING_MN_1_PROCESSED_DATE_TIME = None

        self.CONFIRMING_MN_2_ANIMECOIN_COLLATERAL_BLOCKCHAIN_ADDRESS = None
        self.CONFIRMING_MN_2_ANIMECOIN_ID_PUBLIC_KEY = None
        self.CONFIRMING_MN_2_IP_ADDRESS = None
        self.CONFIRMING_MN_2_COLLATERAL_SIGNATURE_ON_COMBINED_IMAGE_AND_METADATA_STRING = None
        self.CONFIRMING_MN_2_ANIMECOIN_ID_SIGNATURE_ON_COMBINED_IMAGE_AND_METADATA_STRING = None
        self.CONFIRMING_MN_2_PROCESSED_DATE_TIME = None
        ### END

        ### set by ARTIST
        self.ARTWORK_TITLE = None
        self.ARTIST_NAME = None
        self.ARTWORK_SERIES_NAME = None
        self.ARTWORK_CREATION_VIDEO_YOUTUBE_URL = None
        self.ARTIST_WEBSITE = None
        self.ARTIST_WRITTEN_STATEMENT = None
        self.ARTWORK_KEYWORD_SET = None
        self.TOTAL_COPIES = None
        self.COMBINED_ARTWORK_IMAGE_AND_METADATA_STRING = None
        self.ARTIST_SIGNATURE_ON_COMBINED_ARTWORK_IMAGE_AND_METADATA_STRING = None
        ### END

    def to_dict(self):
        return self.__dict__.copy()
